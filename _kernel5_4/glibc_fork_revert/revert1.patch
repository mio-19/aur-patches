From 12efc5b8d5dc6b03379eaed216047994832252cc Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E6=BE=AA?= <mio@mio19.uk>
Date: Fri, 20 Oct 2023 21:26:14 +0800
Subject: [PATCH 1/2] Revert "posix: Add _Fork [BZ #4737]"

This reverts commit c32c868ab8b2b95724550d0130782c0767fc3bab.
---
 malloc/Makefile                               |   3 -
 malloc/tst-mallocfork3.c                      | 213 ------------------
 manual/process.texi                           |  41 ++--
 posix/Makefile                                |   3 +-
 posix/Versions                                |   1 -
 posix/fork.c                                  |   5 +-
 posix/tst-_Fork.c                             | 154 -------------
 posix/unistd.h                                |   7 -
 sysdeps/mach/hurd/i386/libc.abilist           |   1 -
 sysdeps/unix/sysv/linux/aarch64/libc.abilist  |   1 -
 sysdeps/unix/sysv/linux/alpha/libc.abilist    |   1 -
 sysdeps/unix/sysv/linux/arc/libc.abilist      |   1 -
 sysdeps/unix/sysv/linux/arm/be/libc.abilist   |   1 -
 sysdeps/unix/sysv/linux/arm/le/libc.abilist   |   1 -
 sysdeps/unix/sysv/linux/csky/libc.abilist     |   1 -
 sysdeps/unix/sysv/linux/hppa/libc.abilist     |   1 -
 sysdeps/unix/sysv/linux/i386/libc.abilist     |   1 -
 sysdeps/unix/sysv/linux/ia64/libc.abilist     |   1 -
 .../sysv/linux/m68k/coldfire/libc.abilist     |   1 -
 .../unix/sysv/linux/m68k/m680x0/libc.abilist  |   1 -
 .../sysv/linux/microblaze/be/libc.abilist     |   1 -
 .../sysv/linux/microblaze/le/libc.abilist     |   1 -
 .../sysv/linux/mips/mips32/fpu/libc.abilist   |   1 -
 .../sysv/linux/mips/mips32/nofpu/libc.abilist |   1 -
 .../sysv/linux/mips/mips64/n32/libc.abilist   |   1 -
 .../sysv/linux/mips/mips64/n64/libc.abilist   |   1 -
 sysdeps/unix/sysv/linux/nios2/libc.abilist    |   1 -
 .../linux/powerpc/powerpc32/fpu/libc.abilist  |   1 -
 .../powerpc/powerpc32/nofpu/libc.abilist      |   1 -
 .../linux/powerpc/powerpc64/be/libc.abilist   |   1 -
 .../linux/powerpc/powerpc64/le/libc.abilist   |   1 -
 .../unix/sysv/linux/riscv/rv32/libc.abilist   |   1 -
 .../unix/sysv/linux/riscv/rv64/libc.abilist   |   1 -
 .../unix/sysv/linux/s390/s390-32/libc.abilist |   1 -
 .../unix/sysv/linux/s390/s390-64/libc.abilist |   1 -
 sysdeps/unix/sysv/linux/sh/be/libc.abilist    |   1 -
 sysdeps/unix/sysv/linux/sh/le/libc.abilist    |   1 -
 .../sysv/linux/sparc/sparc32/libc.abilist     |   1 -
 .../sysv/linux/sparc/sparc64/libc.abilist     |   1 -
 .../unix/sysv/linux/x86_64/64/libc.abilist    |   1 -
 .../unix/sysv/linux/x86_64/x32/libc.abilist   |   1 -
 41 files changed, 17 insertions(+), 443 deletions(-)
 delete mode 100644 malloc/tst-mallocfork3.c
 delete mode 100644 posix/tst-_Fork.c

diff --git a/malloc/Makefile b/malloc/Makefile
index 2329cf718a..11daa686cd 100644
--- a/malloc/Makefile
+++ b/malloc/Makefile
@@ -31,7 +31,6 @@ tests := mallocbug tst-malloc tst-valloc tst-calloc tst-obstack \
 	 tst-malloc-backtrace tst-malloc-thread-exit \
 	 tst-malloc-thread-fail tst-malloc-fork-deadlock \
 	 tst-mallocfork2 \
-	 tst-mallocfork3 \
 	 tst-interpose-nothread \
 	 tst-interpose-thread \
 	 tst-alloc_buffer \
@@ -162,8 +161,6 @@ libc_malloc_debug-inhibit-o = $(filter-out .os,$(object-suffixes))
 $(objpfx)tst-malloc-backtrace: $(shared-thread-library)
 $(objpfx)tst-malloc-thread-exit: $(shared-thread-library)
 $(objpfx)tst-malloc-thread-fail: $(shared-thread-library)
-$(objpfx)tst-mallocfork3: $(shared-thread-library)
-$(objpfx)tst-mallocfork3-mcheck: $(shared-thread-library)
 $(objpfx)tst-malloc-fork-deadlock: $(shared-thread-library)
 $(objpfx)tst-malloc-stats-cancellation: $(shared-thread-library)
 $(objpfx)tst-malloc-backtrace-mcheck: $(shared-thread-library)
diff --git a/malloc/tst-mallocfork3.c b/malloc/tst-mallocfork3.c
deleted file mode 100644
index 56ebfcd44b..0000000000
--- a/malloc/tst-mallocfork3.c
+++ /dev/null
@@ -1,213 +0,0 @@
-/* Test case for async-signal-safe _Fork (with respect to malloc).
-   Copyright (C) 2021-2022 Free Software Foundation, Inc.
-   This file is part of the GNU C Library.
-
-   The GNU C Library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Lesser General Public License as
-   published by the Free Software Foundation; either version 2.1 of the
-   License, or (at your option) any later version.
-
-   The GNU C Library is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public
-   License along with the GNU C Library; see the file COPYING.LIB.  If
-   not, see <https://www.gnu.org/licenses/>.  */
-
-/* This test is similar to tst-mallocfork2.c, but specifically stress
-   the async-signal-safeness of _Fork on multithread environment.  */
-
-#include <array_length.h>
-#include <errno.h>
-#include <stdbool.h>
-#include <stdio.h>
-#include <stdlib.h>
-#include <support/check.h>
-#include <support/support.h>
-#include <support/xsignal.h>
-#include <support/xthread.h>
-#include <support/xunistd.h>
-#include <sys/wait.h>
-
-/* How many malloc objects to keep arond.  */
-enum { malloc_objects = 1009 };
-
-/* The maximum size of an object.  */
-enum { malloc_maximum_size = 70000 };
-
-/* How many iterations the test performs before exiting.  */
-enum { iterations = 10000 };
-
-/* Barrier for synchronization with the threads sending SIGUSR1
-   signals, to make it more likely that the signals arrive during a
-   fork/free/malloc call.  */
-static pthread_barrier_t barrier;
-
-/* Set to 1 if SIGUSR1 is received.  Used to detect a signal during
-   fork/free/malloc.  */
-static volatile sig_atomic_t sigusr1_received;
-
-/* Periodically set to 1, to indicate that the thread is making
-   progress.  Checked by liveness_signal_handler.  */
-static volatile sig_atomic_t progress_indicator = 1;
-
-/* Set to 1 if an error occurs in the signal handler.  */
-static volatile sig_atomic_t error_indicator = 0;
-
-static void
-sigusr1_handler (int signo)
-{
-  sigusr1_received = 1;
-
-  /* Perform a fork with a trivial subprocess.  */
-  pid_t pid = _Fork ();
-  if (pid == -1)
-    {
-      write_message ("error: fork\n");
-      error_indicator = 1;
-      return;
-    }
-  if (pid == 0)
-    _exit (0);
-  int status;
-  int ret = TEMP_FAILURE_RETRY (waitpid (pid, &status, 0));
-  if (ret < 0)
-    {
-      write_message ("error: waitpid\n");
-      error_indicator = 1;
-      return;
-    }
-  if (status != 0)
-    {
-      write_message ("error: unexpected exit status from subprocess\n");
-      error_indicator = 1;
-      return;
-    }
-}
-
-static void
-liveness_signal_handler (int signo)
-{
-  if (progress_indicator)
-    progress_indicator = 0;
-  else
-    write_message ("warning: thread seems to be stuck\n");
-}
-
-struct signal_send_args
-{
-  pthread_t target;
-  int signo;
-  bool sleep;
-};
-#define SIGNAL_SEND_GET_ARG(arg, field) \
-  (((struct signal_send_args *)(arg))->field)
-
-/* Send SIGNO to the parent thread.  If SLEEP, wait a second between
-   signals, otherwise use barriers to delay sending signals.  */
-static void *
-signal_sender (void *args)
-{
-  int signo = SIGNAL_SEND_GET_ARG (args, signo);
-  bool sleep = SIGNAL_SEND_GET_ARG (args, sleep);
-
-  pthread_t target = SIGNAL_SEND_GET_ARG (args, target);
-  while (true)
-    {
-      if (!sleep)
-        xpthread_barrier_wait (&barrier);
-      xpthread_kill (target, signo);
-      if (sleep)
-        usleep (1 * 1000 * 1000);
-      else
-        xpthread_barrier_wait (&barrier);
-    }
-  return NULL;
-}
-
-static pthread_t sigusr1_sender[5];
-static pthread_t sigusr2_sender;
-
-static int
-do_test (void)
-{
-  xsignal (SIGUSR1, sigusr1_handler);
-  xsignal (SIGUSR2, liveness_signal_handler);
-
-  pthread_t self = pthread_self ();
-
-  struct signal_send_args sigusr2_args = { self, SIGUSR2, true };
-  sigusr2_sender = xpthread_create (NULL, signal_sender, &sigusr2_args);
-
-  /* Send SIGUSR1 signals from several threads.  Hopefully, one
-     signal will hit one of the ciritical functions.  Use a barrier to
-     avoid sending signals while not running fork/free/malloc.  */
-  struct signal_send_args sigusr1_args = { self, SIGUSR1, false };
-  xpthread_barrier_init (&barrier, NULL,
-                         array_length (sigusr1_sender) + 1);
-  for (size_t i = 0; i < array_length (sigusr1_sender); ++i)
-    sigusr1_sender[i] = xpthread_create (NULL, signal_sender, &sigusr1_args);
-
-  void *objects[malloc_objects] = {};
-  unsigned int fork_signals = 0;
-  unsigned int free_signals = 0;
-  unsigned int malloc_signals = 0;
-  unsigned int seed = 1;
-  for (int i = 0; i < iterations; ++i)
-    {
-      progress_indicator = 1;
-      int slot = rand_r (&seed) % malloc_objects;
-      size_t size = rand_r (&seed) % malloc_maximum_size;
-
-      /* Occasionally do a fork first, to catch deadlocks there as
-         well (see bug 24161).  */
-      bool do_fork = (rand_r (&seed) % 7) == 0;
-
-      xpthread_barrier_wait (&barrier);
-      if (do_fork)
-        {
-          sigusr1_received = 0;
-          pid_t pid = _Fork ();
-          TEST_VERIFY_EXIT (pid != -1);
-          if (sigusr1_received)
-            ++fork_signals;
-          if (pid == 0)
-            _exit (0);
-          int status;
-          int ret = TEMP_FAILURE_RETRY (waitpid (pid, &status, 0));
-          if (ret < 0)
-            FAIL_EXIT1 ("waitpid: %m");
-          TEST_COMPARE (status, 0);
-        }
-      sigusr1_received = 0;
-      free (objects[slot]);
-      if (sigusr1_received)
-        ++free_signals;
-      sigusr1_received = 0;
-      objects[slot] = malloc (size);
-      if (sigusr1_received)
-        ++malloc_signals;
-      xpthread_barrier_wait (&barrier);
-
-      if (objects[slot] == NULL || error_indicator != 0)
-        {
-          printf ("error: malloc: %m\n");
-          return 1;
-        }
-    }
-
-  /* Clean up allocations.  */
-  for (int slot = 0; slot < malloc_objects; ++slot)
-    free (objects[slot]);
-
-  printf ("info: signals received during fork: %u\n", fork_signals);
-  printf ("info: signals received during free: %u\n", free_signals);
-  printf ("info: signals received during malloc: %u\n", malloc_signals);
-
-  return 0;
-}
-
-#define TIMEOUT 100
-#include <support/test-driver.c>
diff --git a/manual/process.texi b/manual/process.texi
index 9307379194..4ee2adb647 100644
--- a/manual/process.texi
+++ b/manual/process.texi
@@ -136,8 +136,8 @@ creating a process and making it run another program.
 @cindex parent process
 @cindex subprocess
 A new processes is created when one of the functions
-@code{posix_spawn}, @code{fork}, @code{_Fork} or @code{vfork} is called.
-(The @code{system} and @code{popen} also create new processes internally.)
+@code{posix_spawn}, @code{fork}, or @code{vfork} is called.  (The
+@code{system} and @code{popen} also create new processes internally.)
 Due to the name of the @code{fork} function, the act of creating a new
 process is sometimes called @dfn{forking} a process.  Each new process
 (the @dfn{child process} or @dfn{subprocess}) is allocated a process
@@ -153,10 +153,9 @@ limited information about why the child terminated---for example, its
 exit status code.
 
 A newly forked child process continues to execute the same program as
-its parent process, at the point where the @code{fork} or @code{_Fork}
-call returns.  You can use the return value from @code{fork} or
-@code{_Fork} to tell whether the program is running in the parent process
-or the child.
+its parent process, at the point where the @code{fork} call returns.
+You can use the return value from @code{fork} to tell whether the program
+is running in the parent process or the child.
 
 @cindex process image
 Having several processes run the same program is only occasionally
@@ -248,13 +247,16 @@ It is declared in the header file @file{unistd.h}.
 @deftypefun pid_t fork (void)
 @standards{POSIX.1, unistd.h}
 @safety{@prelim{}@mtsafe{}@asunsafe{@ascuplugin{}}@acunsafe{@aculock{}}}
-@c The posix/fork.c implementation iterates over the fork_handlers
-@c using a lock.  It then takes the IO_list lock, resets the thread-local
-@c pid, and runs fork.  The parent releases the lock, and runs parent
-@c handlers, and unlocks the internal lock.  The child bumps the fork
-@c generation, sets the thread-local pid, resets cpu clocks, initializes
-@c the robust mutex list, the stream locks, the IO_list lock, the dynamic
-@c loader lock, runs the child handlers, reseting ref counters to 1, and
+@c The nptl/.../linux implementation safely collects fork_handlers into
+@c an alloca()ed linked list and increments ref counters; it uses atomic
+@c ops and retries, avoiding locking altogether.  It then takes the
+@c IO_list lock, resets the thread-local pid, and runs fork.  The parent
+@c restores the thread-local pid, releases the lock, and runs parent
+@c handlers, decrementing the ref count and signaling futex wait if
+@c requested by unregister_atfork.  The child bumps the fork generation,
+@c sets the thread-local pid, resets cpu clocks, initializes the robust
+@c mutex list, the stream locks, the IO_list lock, the dynamic loader
+@c lock, runs the child handlers, reseting ref counters to 1, and
 @c initializes the fork lock.  These are all safe, unless atfork
 @c handlers themselves are unsafe.
 The @code{fork} function creates a new process.
@@ -318,19 +320,6 @@ process is cleared.  (The child process inherits its mask of blocked
 signals and signal actions from the parent process.)
 @end itemize
 
-@deftypefun pid_t _Fork (void)
-@standards{GNU, unistd.h}
-@safety{@prelim{}@mtsafe{}@assafe{}@acsafe{}}
-The @code{_Fork} function is similar to @code{fork}, but it does not invoke
-any callbacks registered with @code{pthread_atfork}, nor does it reset
-any internal state or locks (such as the @code{malloc} locks).  In the
-new subprocess, only async-signal-safe functions may be called, such as
-@code{dup2} or @code{execve}.
-
-The @code{_Fork} function is an async-signal-safe replacement of @code{fork}.
-It is a GNU extension.
-
-@end deftypefun
 
 @deftypefun pid_t vfork (void)
 @standards{BSD, unistd.h}
diff --git a/posix/Makefile b/posix/Makefile
index 9b30b53a7c..a8ccfc6436 100644
--- a/posix/Makefile
+++ b/posix/Makefile
@@ -133,7 +133,7 @@ test-srcs	:= globtest
 tests           += wordexp-test tst-exec tst-spawn tst-spawn2 tst-spawn3
 endif
 ifeq (yesyes,$(build-shared)$(have-thread-library))
-tests		+= tst-getopt-cancel tst-_Fork
+tests		+= tst-getopt-cancel
 endif
 tests-static	= tst-exec-static tst-spawn-static
 tests		+= $(tests-static)
@@ -314,7 +314,6 @@ $(objpfx)ptestcases.h: PTESTS PTESTS2C.sed
 $(objpfx)runptests.o: $(objpfx)ptestcases.h
 
 $(objpfx)tst-getopt-cancel: $(shared-thread-library)
-$(objpfx)tst-_Fork: $(shared-thread-library)
 
 test-xfail-annexc = yes
 $(objpfx)annexc.out: $(objpfx)annexc
diff --git a/posix/Versions b/posix/Versions
index 3753810864..b2134ef9fe 100644
--- a/posix/Versions
+++ b/posix/Versions
@@ -152,7 +152,6 @@ libc {
   GLIBC_2.30 {
   }
   GLIBC_2.34 {
-    _Fork;
     execveat;
     posix_spawn_file_actions_addclosefrom_np;
   }
diff --git a/posix/fork.c b/posix/fork.c
index 6b50c091f9..872f543462 100644
--- a/posix/fork.c
+++ b/posix/fork.c
@@ -41,10 +41,7 @@ __libc_fork (void)
 {
   /* Determine if we are running multiple threads.  We skip some fork
      handlers in the single-thread case, to make fork safer to use in
-     signal handlers.  Although POSIX has dropped async-signal-safe
-     requirement for fork (Austin Group tracker issue #62) this is
-     best effort to make is async-signal-safe at least for single-thread
-     case.  */
+     signal handlers.  */
   bool multiple_threads = __libc_single_threaded == 0;
 
   __run_fork_handlers (atfork_run_prepare, multiple_threads);
diff --git a/posix/tst-_Fork.c b/posix/tst-_Fork.c
deleted file mode 100644
index d383f87bf7..0000000000
--- a/posix/tst-_Fork.c
+++ /dev/null
@@ -1,154 +0,0 @@
-/* Basic tests for _Fork.
-   Copyright (C) 2021-2022 Free Software Foundation, Inc.
-   This file is part of the GNU C Library.
-
-   The GNU C Library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Lesser General Public
-   License as published by the Free Software Foundation; either
-   version 2.1 of the License, or (at your option) any later version.
-
-   The GNU C Library is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public
-   License along with the GNU C Library; if not, see
-   <https://www.gnu.org/licenses/>.  */
-
-#include <array_length.h>
-#include <stdlib.h>
-#include <string.h>
-#include <pthread.h>
-#include <stdbool.h>
-#include <support/check.h>
-#include <support/xsignal.h>
-#include <support/temp_file.h>
-#include <support/xunistd.h>
-#include <support/xthread.h>
-
-/* For single-thread, _Fork behaves like fork.  */
-static int
-singlethread_test (void)
-{
-  const char testdata1[] = "abcdefghijklmnopqrtuvwxz";
-  enum { testdatalen1 = array_length (testdata1) };
-  const char testdata2[] = "01234567890";
-  enum { testdatalen2 = array_length (testdata2) };
-
-  pid_t ppid = getpid ();
-
-  int tempfd = create_temp_file ("tst-_Fork", NULL);
-
-  /* Check if the opened file is shared between process by read and write
-     some data on parent and child processes.  */
-  xwrite (tempfd, testdata1, testdatalen1);
-  off_t off = xlseek (tempfd, 0, SEEK_CUR);
-  TEST_COMPARE (off, testdatalen1);
-
-  pid_t pid = _Fork ();
-  TEST_VERIFY_EXIT (pid != -1);
-  if (pid == 0)
-    {
-      TEST_VERIFY_EXIT (getpid () != ppid);
-      TEST_COMPARE (getppid(), ppid);
-
-      TEST_COMPARE (xlseek (tempfd, 0, SEEK_CUR), testdatalen1);
-
-      xlseek (tempfd, 0, SEEK_SET);
-      char buf[testdatalen1];
-      TEST_COMPARE (read (tempfd, buf, sizeof (buf)), testdatalen1);
-      TEST_COMPARE_BLOB (buf, testdatalen1, testdata1, testdatalen1);
-
-      xlseek (tempfd, 0, SEEK_SET);
-      xwrite (tempfd, testdata2, testdatalen2);
-
-      xclose (tempfd);
-
-      _exit (EXIT_SUCCESS);
-    }
-
-  int status;
-  xwaitpid (pid, &status, 0);
-  TEST_VERIFY (WIFEXITED (status));
-  TEST_COMPARE (WEXITSTATUS (status), EXIT_SUCCESS);
-
-  TEST_COMPARE (xlseek (tempfd, 0, SEEK_CUR), testdatalen2);
-
-  xlseek (tempfd, 0, SEEK_SET);
-  char buf[testdatalen2];
-  TEST_COMPARE (read (tempfd, buf, sizeof (buf)), testdatalen2);
-
-  TEST_COMPARE_BLOB (buf, testdatalen2, testdata2, testdatalen2);
-
-  return 0;
-}
-
-
-static volatile sig_atomic_t sigusr1_handler_ran;
-#define SIG_PID_EXIT_CODE 20
-
-static bool atfork_prepare_var;
-static bool atfork_parent_var;
-static bool atfork_child_var;
-
-static void
-atfork_prepare (void)
-{
-  atfork_prepare_var = true;
-}
-
-static void
-atfork_parent (void)
-{
-  atfork_parent_var = true;
-}
-
-static void
-atfork_child (void)
-{
-  atfork_child_var = true;
-}
-
-/* Different than fork, _Fork does not execute any pthread_atfork
-   handlers.  */
-static int
-singlethread_atfork_test (void)
-{
-  pthread_atfork (atfork_prepare, atfork_parent, atfork_child);
-  singlethread_test ();
-  TEST_VERIFY (!atfork_prepare_var);
-  TEST_VERIFY (!atfork_parent_var);
-  TEST_VERIFY (!atfork_child_var);
-
-  return 0;
-}
-
-static void *
-mt_atfork_test (void *args)
-{
-  singlethread_atfork_test ();
-
-  return NULL;
-}
-
-static int
-multithread_atfork_test (void)
-{
-  pthread_t thr = xpthread_create (NULL, mt_atfork_test, NULL);
-  xpthread_join (thr);
-
-  return 0;
-}
-
-
-static int
-do_test (void)
-{
-  singlethread_atfork_test ();
-  multithread_atfork_test ();
-
-  return 0;
-}
-
-#include <support/test-driver.c>
diff --git a/posix/unistd.h b/posix/unistd.h
index 764d914cea..cdcb499d30 100644
--- a/posix/unistd.h
+++ b/posix/unistd.h
@@ -786,13 +786,6 @@ extern __pid_t fork (void) __THROWNL;
 extern __pid_t vfork (void) __THROW;
 #endif /* Use misc or XPG < 7. */
 
-#ifdef __USE_GNU
-/* This is similar to fork, however it does not run the atfork handlers
-   neither reinitialize any internal locks in multithread case.
-   Different than fork, _Fork is async-signal-safe.  */
-extern __pid_t _Fork (void) __THROW;
-#endif
-
 
 /* Return the pathname of the terminal FD is open on, or NULL on errors.
    The returned storage is good only until the next call to this function.  */
diff --git a/sysdeps/mach/hurd/i386/libc.abilist b/sysdeps/mach/hurd/i386/libc.abilist
index 4dc87e9061..5673868512 100644
--- a/sysdeps/mach/hurd/i386/libc.abilist
+++ b/sysdeps/mach/hurd/i386/libc.abilist
@@ -2236,7 +2236,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 __isnanf128 F
 GLIBC_2.34 __libc_start_main F
 GLIBC_2.34 _hurd_libc_proc_init F
diff --git a/sysdeps/unix/sysv/linux/aarch64/libc.abilist b/sysdeps/unix/sysv/linux/aarch64/libc.abilist
index 1b63d9e447..9b715457e4 100644
--- a/sysdeps/unix/sysv/linux/aarch64/libc.abilist
+++ b/sysdeps/unix/sysv/linux/aarch64/libc.abilist
@@ -2401,7 +2401,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 __libc_start_main F
 GLIBC_2.34 __mq_open_2 F
 GLIBC_2.34 __pthread_cleanup_routine F
diff --git a/sysdeps/unix/sysv/linux/alpha/libc.abilist b/sysdeps/unix/sysv/linux/alpha/libc.abilist
index e7e4cf7d2a..d10ff785ee 100644
--- a/sysdeps/unix/sysv/linux/alpha/libc.abilist
+++ b/sysdeps/unix/sysv/linux/alpha/libc.abilist
@@ -2498,7 +2498,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 __libc_start_main F
 GLIBC_2.34 __mq_open_2 F
 GLIBC_2.34 __pthread_cleanup_routine F
diff --git a/sysdeps/unix/sysv/linux/arc/libc.abilist b/sysdeps/unix/sysv/linux/arc/libc.abilist
index bc3d228e31..1a3b957614 100644
--- a/sysdeps/unix/sysv/linux/arc/libc.abilist
+++ b/sysdeps/unix/sysv/linux/arc/libc.abilist
@@ -2162,7 +2162,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 __libc_start_main F
 GLIBC_2.34 __mq_open_2 F
 GLIBC_2.34 __pthread_cleanup_routine F
diff --git a/sysdeps/unix/sysv/linux/arm/be/libc.abilist b/sysdeps/unix/sysv/linux/arm/be/libc.abilist
index db7039c4ab..b4f983c9d4 100644
--- a/sysdeps/unix/sysv/linux/arm/be/libc.abilist
+++ b/sysdeps/unix/sysv/linux/arm/be/libc.abilist
@@ -190,7 +190,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/arm/le/libc.abilist b/sysdeps/unix/sysv/linux/arm/le/libc.abilist
index d2add4fb49..53698559e7 100644
--- a/sysdeps/unix/sysv/linux/arm/le/libc.abilist
+++ b/sysdeps/unix/sysv/linux/arm/le/libc.abilist
@@ -187,7 +187,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/csky/libc.abilist b/sysdeps/unix/sysv/linux/csky/libc.abilist
index 355d72a30c..9e858205ad 100644
--- a/sysdeps/unix/sysv/linux/csky/libc.abilist
+++ b/sysdeps/unix/sysv/linux/csky/libc.abilist
@@ -2346,7 +2346,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/hppa/libc.abilist b/sysdeps/unix/sysv/linux/hppa/libc.abilist
index 3df39bb28c..889e011e1d 100644
--- a/sysdeps/unix/sysv/linux/hppa/libc.abilist
+++ b/sysdeps/unix/sysv/linux/hppa/libc.abilist
@@ -2295,7 +2295,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/i386/libc.abilist b/sysdeps/unix/sysv/linux/i386/libc.abilist
index c4da358f80..eef9e07476 100644
--- a/sysdeps/unix/sysv/linux/i386/libc.abilist
+++ b/sysdeps/unix/sysv/linux/i386/libc.abilist
@@ -2478,7 +2478,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/ia64/libc.abilist b/sysdeps/unix/sysv/linux/ia64/libc.abilist
index 241bac70ea..a938b24818 100644
--- a/sysdeps/unix/sysv/linux/ia64/libc.abilist
+++ b/sysdeps/unix/sysv/linux/ia64/libc.abilist
@@ -2335,7 +2335,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 __isnanf128 F
 GLIBC_2.34 __libc_start_main F
 GLIBC_2.34 __mq_open_2 F
diff --git a/sysdeps/unix/sysv/linux/m68k/coldfire/libc.abilist b/sysdeps/unix/sysv/linux/m68k/coldfire/libc.abilist
index 78bf372b72..c1376f4264 100644
--- a/sysdeps/unix/sysv/linux/m68k/coldfire/libc.abilist
+++ b/sysdeps/unix/sysv/linux/m68k/coldfire/libc.abilist
@@ -191,7 +191,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/m68k/m680x0/libc.abilist b/sysdeps/unix/sysv/linux/m68k/m680x0/libc.abilist
index 00df5c901f..087181b37f 100644
--- a/sysdeps/unix/sysv/linux/m68k/m680x0/libc.abilist
+++ b/sysdeps/unix/sysv/linux/m68k/m680x0/libc.abilist
@@ -2422,7 +2422,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/microblaze/be/libc.abilist b/sysdeps/unix/sysv/linux/microblaze/be/libc.abilist
index e8118569c3..f7344a27ce 100644
--- a/sysdeps/unix/sysv/linux/microblaze/be/libc.abilist
+++ b/sysdeps/unix/sysv/linux/microblaze/be/libc.abilist
@@ -2395,7 +2395,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/microblaze/le/libc.abilist b/sysdeps/unix/sysv/linux/microblaze/le/libc.abilist
index c0d2373e64..9ea9901733 100644
--- a/sysdeps/unix/sysv/linux/microblaze/le/libc.abilist
+++ b/sysdeps/unix/sysv/linux/microblaze/le/libc.abilist
@@ -2392,7 +2392,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/mips/mips32/fpu/libc.abilist b/sysdeps/unix/sysv/linux/mips/mips32/fpu/libc.abilist
index 2d0fd04f54..9258fc872c 100644
--- a/sysdeps/unix/sysv/linux/mips/mips32/fpu/libc.abilist
+++ b/sysdeps/unix/sysv/linux/mips/mips32/fpu/libc.abilist
@@ -2387,7 +2387,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/mips/mips32/nofpu/libc.abilist b/sysdeps/unix/sysv/linux/mips/mips32/nofpu/libc.abilist
index e39ccfb312..62cdcafebb 100644
--- a/sysdeps/unix/sysv/linux/mips/mips32/nofpu/libc.abilist
+++ b/sysdeps/unix/sysv/linux/mips/mips32/nofpu/libc.abilist
@@ -2385,7 +2385,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/mips/mips64/n32/libc.abilist b/sysdeps/unix/sysv/linux/mips/mips64/n32/libc.abilist
index 1e900f86e4..cb9e8b1fbe 100644
--- a/sysdeps/unix/sysv/linux/mips/mips64/n32/libc.abilist
+++ b/sysdeps/unix/sysv/linux/mips/mips64/n32/libc.abilist
@@ -2393,7 +2393,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/mips/mips64/n64/libc.abilist b/sysdeps/unix/sysv/linux/mips/mips64/n64/libc.abilist
index 9145ba7931..c8286da26d 100644
--- a/sysdeps/unix/sysv/linux/mips/mips64/n64/libc.abilist
+++ b/sysdeps/unix/sysv/linux/mips/mips64/n64/libc.abilist
@@ -2387,7 +2387,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 __libc_start_main F
 GLIBC_2.34 __mq_open_2 F
 GLIBC_2.34 __pthread_cleanup_routine F
diff --git a/sysdeps/unix/sysv/linux/nios2/libc.abilist b/sysdeps/unix/sysv/linux/nios2/libc.abilist
index e95d60d926..e39e4331ca 100644
--- a/sysdeps/unix/sysv/linux/nios2/libc.abilist
+++ b/sysdeps/unix/sysv/linux/nios2/libc.abilist
@@ -2434,7 +2434,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/powerpc/powerpc32/fpu/libc.abilist b/sysdeps/unix/sysv/linux/powerpc/powerpc32/fpu/libc.abilist
index 3820b9f235..15f4623ecc 100644
--- a/sysdeps/unix/sysv/linux/powerpc/powerpc32/fpu/libc.abilist
+++ b/sysdeps/unix/sysv/linux/powerpc/powerpc32/fpu/libc.abilist
@@ -2449,7 +2449,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/powerpc/powerpc32/nofpu/libc.abilist b/sysdeps/unix/sysv/linux/powerpc/powerpc32/nofpu/libc.abilist
index 464dc27fcd..8f74f5c048 100644
--- a/sysdeps/unix/sysv/linux/powerpc/powerpc32/nofpu/libc.abilist
+++ b/sysdeps/unix/sysv/linux/powerpc/powerpc32/nofpu/libc.abilist
@@ -2482,7 +2482,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/powerpc/powerpc64/be/libc.abilist b/sysdeps/unix/sysv/linux/powerpc/powerpc64/be/libc.abilist
index 2f7e58747f..49029579ee 100644
--- a/sysdeps/unix/sysv/linux/powerpc/powerpc64/be/libc.abilist
+++ b/sysdeps/unix/sysv/linux/powerpc/powerpc64/be/libc.abilist
@@ -2295,7 +2295,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 __libc_start_main F
 GLIBC_2.34 __mq_open_2 F
 GLIBC_2.34 __pthread_cleanup_routine F
diff --git a/sysdeps/unix/sysv/linux/powerpc/powerpc64/le/libc.abilist b/sysdeps/unix/sysv/linux/powerpc/powerpc64/le/libc.abilist
index 4f3043d913..f0ff57cf75 100644
--- a/sysdeps/unix/sysv/linux/powerpc/powerpc64/le/libc.abilist
+++ b/sysdeps/unix/sysv/linux/powerpc/powerpc64/le/libc.abilist
@@ -2596,7 +2596,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 __isnanf128 F
 GLIBC_2.34 __libc_start_main F
 GLIBC_2.34 __mq_open_2 F
diff --git a/sysdeps/unix/sysv/linux/riscv/rv32/libc.abilist b/sysdeps/unix/sysv/linux/riscv/rv32/libc.abilist
index 84b6ac815a..8855dc0a5b 100644
--- a/sysdeps/unix/sysv/linux/riscv/rv32/libc.abilist
+++ b/sysdeps/unix/sysv/linux/riscv/rv32/libc.abilist
@@ -2164,7 +2164,6 @@ GLIBC_2.33 wprintf F
 GLIBC_2.33 write F
 GLIBC_2.33 writev F
 GLIBC_2.33 wscanf F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 __libc_start_main F
 GLIBC_2.34 __mq_open_2 F
 GLIBC_2.34 __pthread_cleanup_routine F
diff --git a/sysdeps/unix/sysv/linux/riscv/rv64/libc.abilist b/sysdeps/unix/sysv/linux/riscv/rv64/libc.abilist
index 4d5c19c56a..d842843163 100644
--- a/sysdeps/unix/sysv/linux/riscv/rv64/libc.abilist
+++ b/sysdeps/unix/sysv/linux/riscv/rv64/libc.abilist
@@ -2364,7 +2364,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 __libc_start_main F
 GLIBC_2.34 __mq_open_2 F
 GLIBC_2.34 __pthread_cleanup_routine F
diff --git a/sysdeps/unix/sysv/linux/s390/s390-32/libc.abilist b/sysdeps/unix/sysv/linux/s390/s390-32/libc.abilist
index 7c5ee8d569..e5fc45db95 100644
--- a/sysdeps/unix/sysv/linux/s390/s390-32/libc.abilist
+++ b/sysdeps/unix/sysv/linux/s390/s390-32/libc.abilist
@@ -2447,7 +2447,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/s390/s390-64/libc.abilist b/sysdeps/unix/sysv/linux/s390/s390-64/libc.abilist
index 50de0b46cf..85aa6e0550 100644
--- a/sysdeps/unix/sysv/linux/s390/s390-64/libc.abilist
+++ b/sysdeps/unix/sysv/linux/s390/s390-64/libc.abilist
@@ -2332,7 +2332,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 __libc_start_main F
 GLIBC_2.34 __mq_open_2 F
 GLIBC_2.34 __pthread_cleanup_routine F
diff --git a/sysdeps/unix/sysv/linux/sh/be/libc.abilist b/sysdeps/unix/sysv/linux/sh/be/libc.abilist
index 66fba013ca..259de51c8a 100644
--- a/sysdeps/unix/sysv/linux/sh/be/libc.abilist
+++ b/sysdeps/unix/sysv/linux/sh/be/libc.abilist
@@ -2302,7 +2302,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/sh/le/libc.abilist b/sysdeps/unix/sysv/linux/sh/le/libc.abilist
index 38703f8aa0..48ebc6618c 100644
--- a/sysdeps/unix/sysv/linux/sh/le/libc.abilist
+++ b/sysdeps/unix/sysv/linux/sh/le/libc.abilist
@@ -2299,7 +2299,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/sparc/sparc32/libc.abilist b/sysdeps/unix/sysv/linux/sparc/sparc32/libc.abilist
index 6df55eb765..c8ad3536cf 100644
--- a/sysdeps/unix/sysv/linux/sparc/sparc32/libc.abilist
+++ b/sysdeps/unix/sysv/linux/sparc/sparc32/libc.abilist
@@ -2442,7 +2442,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 ___adjtimex64 F
 GLIBC_2.34 __adjtime64 F
 GLIBC_2.34 __aio_suspend_time64 F
diff --git a/sysdeps/unix/sysv/linux/sparc/sparc64/libc.abilist b/sysdeps/unix/sysv/linux/sparc/sparc64/libc.abilist
index b90569d881..c17707932c 100644
--- a/sysdeps/unix/sysv/linux/sparc/sparc64/libc.abilist
+++ b/sysdeps/unix/sysv/linux/sparc/sparc64/libc.abilist
@@ -2359,7 +2359,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 __libc_start_main F
 GLIBC_2.34 __mq_open_2 F
 GLIBC_2.34 __pthread_cleanup_routine F
diff --git a/sysdeps/unix/sysv/linux/x86_64/64/libc.abilist b/sysdeps/unix/sysv/linux/x86_64/64/libc.abilist
index e88b0f101f..0636053e6d 100644
--- a/sysdeps/unix/sysv/linux/x86_64/64/libc.abilist
+++ b/sysdeps/unix/sysv/linux/x86_64/64/libc.abilist
@@ -2309,7 +2309,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 __isnanf128 F
 GLIBC_2.34 __libc_start_main F
 GLIBC_2.34 __mq_open_2 F
diff --git a/sysdeps/unix/sysv/linux/x86_64/x32/libc.abilist b/sysdeps/unix/sysv/linux/x86_64/x32/libc.abilist
index e0755272eb..e56882ad59 100644
--- a/sysdeps/unix/sysv/linux/x86_64/x32/libc.abilist
+++ b/sysdeps/unix/sysv/linux/x86_64/x32/libc.abilist
@@ -2415,7 +2415,6 @@ GLIBC_2.33 mknod F
 GLIBC_2.33 mknodat F
 GLIBC_2.33 stat F
 GLIBC_2.33 stat64 F
-GLIBC_2.34 _Fork F
 GLIBC_2.34 __isnanf128 F
 GLIBC_2.34 __libc_start_main F
 GLIBC_2.34 __mq_open_2 F
-- 
2.42.0

